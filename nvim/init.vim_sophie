" Specify a directory for plugins
" - For Neovim: stdpath('data') . '/plugged'
" - Avoid using standard Vim directory names like 'plugin'

call plug#begin('~/.vim/plugged')

" Make sure you use single quotes

" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
Plug 'junegunn/vim-easy-align'

" Multiple Plug commands can be written in a single line using | separators
Plug 'honza/vim-snippets'

" On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'tpope/vim-fireplace', { 'for': 'clojure' }

" Much needed Elixir Plugin
Plug 'elixir-lang/vim-elixir'

" YCM Generator
Plug 'rdnetto/YCM-Generator', { 'branch': 'stable' }

" Using a tagged release; wildcard allowed (requires git 1.9.2 or above)
Plug 'fatih/vim-go', { 'tag': '*' }

" Plugin options
Plug 'nsf/gocode', { 'tag': 'v.20150303', 'rtp': 'vim' }

" Plugin outside ~/.vim/plugged with post-update hook
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

" Multiple commands
Plug 'junegunn/vim-github-dashboard', { 'on': ['GHDashboard', 'GHActivity'] }

" Loaded when clojure file is opened
Plug 'tpope/vim-fireplace', { 'for': 'clojure' }

" Multiple file types
Plug 'kovisoft/paredit', { 'for': ['clojure', 'scheme'] }

" On-demand loading on both conditions
Plug 'junegunn/vader.vim',  { 'on': 'Vader', 'for': 'vader' }

" Code to execute when the plugin is lazily loaded on demand
Plug 'junegunn/goyo.vim', { 'for': 'markdown' }
autocmd! User goyo.vim echom 'Goyo is now loaded!'

" Cute light bar
Plug 'itchyny/lightline.vim'

" Linting & stuff
Plug 'dense-analysis/ale'

" Language server + settings
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'

" U
Plug 'michaeljsmith/vim-indent-object'

" Initialize plugin system
call plug#end()



" Lightline theme
"call dein#add('itchyny/lightline.vim')
set noshowmode
let g:lightline = { 'colorscheme': 'seoul256' }


" Enable ESLint only for JavaScript.
let b:ale_linters = ['eslint']
let g:ale_linters = {
\   'javascript': ['eslint'],
\}

let g:ale_sign_error = '>>'
let g:ale_sign_warning = '--'

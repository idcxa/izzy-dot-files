# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Exec
exec_always --no-startup-id autotiling
exec_always --no-startup-id unclutter -idle 3

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
set $browser firefox
set $browser2 google-chrome-stable
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu rofi -show drun

### Output configuration
#
# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
output * bg $HOME/Pictures/w/w54b6ld6hze21.png fill

default_border pixel 1
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Open a browser
    bindsym $mod+w exec $browser
    bindsym $mod+Shift+w exec $browser2

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Take a screenshot
    bindsym $mod+s exec grim - | tee ~/Pictures/Screenshots/screenshot_$(date '+%Y-%m-%d-%H-%M-%S').png | wl-copy -t image/png
    bindsym $mod+Shift+s exec grim -g "$(slurp)" - | tee ~/Pictures/Screenshots/screenshot_$(date '+%Y-%m-%d-%H-%M-%S').png | wl-copy -t image/png

    # Brightness
    bindsym XF86MonBrightnessUp exec $HOME/.config/scripts/brightness.sh up
    bindsym XF86MonBrightnessDown exec $HOME/.config/scripts/brightness.sh down
    bindsym Shift+XF86MonBrightnessUp exec brightnessctl set 852
    bindsym Shift+XF86MonBrightnessDown exec brightnessctl set 1

    # Volume
    bindsym XF86AudioRaiseVolume exec 'pactl set-sink-volume @DEFAULT_SINK@ +10%'
    bindsym XF86AudioLowerVolume exec 'pactl set-sink-volume @DEFAULT_SINK@ -10%'
    bindsym XF86AudioMute exec 'pactl set-sink-mute @DEFAULT_SINK@ toggle'

    # Audio
    #bindsym XF86AudioRaiseVolume exec pamixer --allow-boost -i 10 -u
    #bindsym XF86AudioLowerVolume exec pamixer --allow-boost -d 10 -u
    #bindsym XF86AudioMute exec pamixer -t

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    set $workspace1 "1 "
    set $workspace2 "2 "
    set $workspace3 "3 "
    set $workspace4 "4 "
    set $workspace5 "5"
    set $workspace6 "6"
    set $workspace7 "7"
    set $workspace8 "8"
    set $workspace9 "9"
    set $workspace10 "10"
    # Switch to workspace
    bindsym $mod+1 workspace number $workspace1
    bindsym $mod+2 workspace number $workspace2
    bindsym $mod+3 workspace number $workspace3
    bindsym $mod+4 workspace number $workspace4
    bindsym $mod+5 workspace number $workspace5
    bindsym $mod+6 workspace number $workspace6
    bindsym $mod+7 workspace number $workspace7
    bindsym $mod+8 workspace number $workspace8
    bindsym $mod+9 workspace number $workspace9
    bindsym $mod+0 workspace number $workspace10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number $workspace1
    bindsym $mod+Shift+2 move container to workspace number $workspace2
    bindsym $mod+Shift+3 move container to workspace number $workspace3
    bindsym $mod+Shift+4 move container to workspace number $workspace4
    bindsym $mod+Shift+5 move container to workspace number $workspace5
    bindsym $mod+Shift+6 move container to workspace number $workspace6
    bindsym $mod+Shift+7 move container to workspace number $workspace7
    bindsym $mod+Shift+8 move container to workspace number $workspace8
    bindsym $mod+Shift+9 move container to workspace number $workspace9
    bindsym $mod+Shift+0 move container to workspace number $workspace10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    #bindsym $mod+Shift+s layout stacking
    #bindsym $mod+Shift+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

set $bg-colour 	                #2f002f
set $inactive-bg-colour         #2f343f
set $text-colour                #f3f4f5
set $inactive-text-colour       #676E7D
set $urgent-bg-colour           #E53935
set $preview-colour             #2f343f

# Window colours
client.focused                  $bg-colour          $bg-colour          $text-colour             $preview-colour
client.unfocused                $inactive-bg-colour $inactive-bg-colour $inactive-text-colour    $preview-colour
client.focused_inactive         $inactive-bg-colour $inactive-bg-colour $inactive-text-colour    $preview-colour
client.urgent $urgent-bg-colour $urgent-bg-colour   $bg-colour          $text-colour             $preview-colour

# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    font pango:Fira Code, 12
    status_command while cd $HOME/.config/scripts/; echo  $(./ram.sh) ::  $(./cpu.sh) :: $(./battery.sh $(cat /sys/class/power_supply/BAT0/capacity)) $(./battery.sh $(cat /sys/class/power_supply/BAT1/capacity)) :: `date +"%e, %b - %R"` ; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include @sysconfdir@/sway/config.d/*

